//
// File generated by /afs/cern.ch/cms/sw/slc5_ia32_gcc434/lcg/root/5.22.00d-cms4//bin/rootcint at Tue Jan 26 11:46:25 2010

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "anaTNP2Dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void anaTNP2_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_anaTNP2(void *p = 0);
   static void *newArray_anaTNP2(Long_t size, void *p);
   static void delete_anaTNP2(void *p);
   static void deleteArray_anaTNP2(void *p);
   static void destruct_anaTNP2(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::anaTNP2*)
   {
      ::anaTNP2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::anaTNP2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("anaTNP2", ::anaTNP2::Class_Version(), "tnp/anaTNP2.hh", 32,
                  typeid(::anaTNP2), DefineBehavior(ptr, ptr),
                  &::anaTNP2::Dictionary, isa_proxy, 0,
                  sizeof(::anaTNP2) );
      instance.SetNew(&new_anaTNP2);
      instance.SetNewArray(&newArray_anaTNP2);
      instance.SetDelete(&delete_anaTNP2);
      instance.SetDeleteArray(&deleteArray_anaTNP2);
      instance.SetDestructor(&destruct_anaTNP2);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::anaTNP2*)
   {
      return GenerateInitInstanceLocal((::anaTNP2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::anaTNP2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *anaTNP2::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *anaTNP2::Class_Name()
{
   return "anaTNP2";
}

//______________________________________________________________________________
const char *anaTNP2::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::anaTNP2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int anaTNP2::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::anaTNP2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void anaTNP2::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::anaTNP2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *anaTNP2::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::anaTNP2*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void anaTNP2::Streamer(TBuffer &R__b)
{
   // Stream an object of class anaTNP2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 10; R__i++)
         R__b >> fD[R__i];
      for (R__i = 0; R__i < 20; R__i++)
         R__b >> fM[R__i];
      R__b >> fShow;
      fFile.Streamer(R__b);
      R__b.ReadStaticArray((double*)lD);
      R__b.ReadStaticArray((double*)lM);
      R__b >> fHbinning;
      {
         vector<TH1D> &R__stl =  fS1VectorPos;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH1D R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TH1D> &R__stl =  fS1VectorNeg;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH1D R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TH1D> &R__stl =  fS2VectorPos;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH1D R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TH1D> &R__stl =  fS2VectorNeg;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH1D R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TH1D> &R__stl =  fS3VectorPos;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH1D R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TH1D> &R__stl =  fS3VectorNeg;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH1D R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TH1D> &R__stl =  fS1VectorMcpPos;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH1D R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TH1D> &R__stl =  fS1VectorMcpNeg;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH1D R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TH1D> &R__stl =  fS2VectorMcpPos;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH1D R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TH1D> &R__stl =  fS2VectorMcpNeg;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH1D R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TH1D> &R__stl =  fS3VectorMcpPos;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH1D R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TH1D> &R__stl =  fS3VectorMcpNeg;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH1D R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b >> fS1YieldPos;
      R__b >> fS1YieldNeg;
      R__b >> fS2YieldPos;
      R__b >> fS2YieldNeg;
      R__b >> fS3YieldPos;
      R__b >> fS3YieldNeg;
      R__b >> fS1MctPos;
      R__b >> fS1MctNeg;
      R__b >> fS2MctPos;
      R__b >> fS2MctNeg;
      R__b >> fS1McpPos;
      R__b >> fS1McpNeg;
      R__b >> fS2McpPos;
      R__b >> fS2McpNeg;
      R__b >> fS1TotalPos;
      R__b >> fS1TotalNeg;
      R__b >> fS2TotalPos;
      R__b >> fS2TotalNeg;
      R__b >> fPtTnpNeg;
      R__b >> fPtTnpPos;
      R__b >> fPtMctNeg;
      R__b >> fPtMctPos;
      R__b >> fPtMcpNeg;
      R__b >> fPtMcpPos;
      R__b >> fPtMmbNeg;
      R__b >> fPtMmbPos;
      R__b >> f0;
      R__b >> f1;
      R__b >> f2;
      R__b >> f3;
      R__b >> f4;
      R__b >> f5;
      R__b >> f6;
      R__b >> f7;
      R__b >> f8;
      R__b >> f9;
      R__b >> fMode;
      R__b >> fFont;
      R__b >> c0;
      R__b >> c1;
      R__b >> c2;
      R__b >> c3;
      R__b >> c4;
      R__b >> c5;
      R__b >> tl;
      R__b >> box;
      R__b >> pa;
      R__b >> pl;
      R__b >> legg;
      R__b >> legge;
      R__b.ReadStaticArray((char*)line);
      R__b >> fFixFit;
      { TString R__str; R__str.Streamer(R__b); fDirectory = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); fPtDirectory = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); fNumbersFileName = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); fSample = R__str.Data(); }
      R__b.ReadStaticArray((char*)fSuffix);
      R__b.CheckByteCount(R__s, R__c, anaTNP2::IsA());
   } else {
      R__c = R__b.WriteVersion(anaTNP2::IsA(), kTRUE);
      TObject::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 10; R__i++)
         R__b << fD[R__i];
      for (R__i = 0; R__i < 20; R__i++)
         R__b << fM[R__i];
      R__b << fShow;
      fFile.Streamer(R__b);
      R__b.WriteArray(lD, 10);
      R__b.WriteArray(lM, 20);
      R__b << (TObject*)fHbinning;
      {
         vector<TH1D> &R__stl =  fS1VectorPos;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH1D>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH1D&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TH1D> &R__stl =  fS1VectorNeg;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH1D>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH1D&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TH1D> &R__stl =  fS2VectorPos;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH1D>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH1D&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TH1D> &R__stl =  fS2VectorNeg;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH1D>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH1D&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TH1D> &R__stl =  fS3VectorPos;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH1D>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH1D&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TH1D> &R__stl =  fS3VectorNeg;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH1D>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH1D&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TH1D> &R__stl =  fS1VectorMcpPos;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH1D>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH1D&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TH1D> &R__stl =  fS1VectorMcpNeg;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH1D>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH1D&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TH1D> &R__stl =  fS2VectorMcpPos;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH1D>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH1D&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TH1D> &R__stl =  fS2VectorMcpNeg;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH1D>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH1D&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TH1D> &R__stl =  fS3VectorMcpPos;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH1D>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH1D&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TH1D> &R__stl =  fS3VectorMcpNeg;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH1D>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH1D&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b << (TObject*)fS1YieldPos;
      R__b << (TObject*)fS1YieldNeg;
      R__b << (TObject*)fS2YieldPos;
      R__b << (TObject*)fS2YieldNeg;
      R__b << (TObject*)fS3YieldPos;
      R__b << (TObject*)fS3YieldNeg;
      R__b << (TObject*)fS1MctPos;
      R__b << (TObject*)fS1MctNeg;
      R__b << (TObject*)fS2MctPos;
      R__b << (TObject*)fS2MctNeg;
      R__b << (TObject*)fS1McpPos;
      R__b << (TObject*)fS1McpNeg;
      R__b << (TObject*)fS2McpPos;
      R__b << (TObject*)fS2McpNeg;
      R__b << (TObject*)fS1TotalPos;
      R__b << (TObject*)fS1TotalNeg;
      R__b << (TObject*)fS2TotalPos;
      R__b << (TObject*)fS2TotalNeg;
      R__b << fPtTnpNeg;
      R__b << fPtTnpPos;
      R__b << fPtMctNeg;
      R__b << fPtMctPos;
      R__b << fPtMcpNeg;
      R__b << fPtMcpPos;
      R__b << fPtMmbNeg;
      R__b << fPtMmbPos;
      R__b << f0;
      R__b << f1;
      R__b << f2;
      R__b << f3;
      R__b << f4;
      R__b << f5;
      R__b << f6;
      R__b << f7;
      R__b << f8;
      R__b << f9;
      R__b << fMode;
      R__b << fFont;
      R__b << c0;
      R__b << c1;
      R__b << c2;
      R__b << c3;
      R__b << c4;
      R__b << c5;
      R__b << tl;
      R__b << box;
      R__b << pa;
      R__b << pl;
      R__b << legg;
      R__b << legge;
      R__b.WriteArray(line, 200);
      R__b << fFixFit;
      { TString R__str = fDirectory.c_str(); R__str.Streamer(R__b);}
      { TString R__str = fPtDirectory.c_str(); R__str.Streamer(R__b);}
      { TString R__str = fNumbersFileName.c_str(); R__str.Streamer(R__b);}
      { TString R__str = fSample.c_str(); R__str.Streamer(R__b);}
      R__b.WriteArray(fSuffix, 100);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void anaTNP2::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class anaTNP2.
      TClass *R__cl = ::anaTNP2::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fD[10]", &fD);
      R__insp.Inspect(R__cl, R__parent, "*fM[20]", &fM);
      R__insp.Inspect(R__cl, R__parent, "fShow", &fShow);
      R__insp.Inspect(R__cl, R__parent, "fFile", &fFile);
      fFile.ShowMembers(R__insp, strcat(R__parent,"fFile.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "lD[10]", lD);
      R__insp.Inspect(R__cl, R__parent, "lM[20]", lM);
      R__insp.Inspect(R__cl, R__parent, "*fHbinning", &fHbinning);
      R__insp.Inspect(R__cl, R__parent, "fS1VectorPos", (void*)&fS1VectorPos);
      ::ROOT::GenericShowMembers("vector<TH1D>", (void*)&fS1VectorPos, R__insp, strcat(R__parent,"fS1VectorPos."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fS1VectorNeg", (void*)&fS1VectorNeg);
      ::ROOT::GenericShowMembers("vector<TH1D>", (void*)&fS1VectorNeg, R__insp, strcat(R__parent,"fS1VectorNeg."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fS2VectorPos", (void*)&fS2VectorPos);
      ::ROOT::GenericShowMembers("vector<TH1D>", (void*)&fS2VectorPos, R__insp, strcat(R__parent,"fS2VectorPos."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fS2VectorNeg", (void*)&fS2VectorNeg);
      ::ROOT::GenericShowMembers("vector<TH1D>", (void*)&fS2VectorNeg, R__insp, strcat(R__parent,"fS2VectorNeg."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fS3VectorPos", (void*)&fS3VectorPos);
      ::ROOT::GenericShowMembers("vector<TH1D>", (void*)&fS3VectorPos, R__insp, strcat(R__parent,"fS3VectorPos."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fS3VectorNeg", (void*)&fS3VectorNeg);
      ::ROOT::GenericShowMembers("vector<TH1D>", (void*)&fS3VectorNeg, R__insp, strcat(R__parent,"fS3VectorNeg."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fS1VectorMcpPos", (void*)&fS1VectorMcpPos);
      ::ROOT::GenericShowMembers("vector<TH1D>", (void*)&fS1VectorMcpPos, R__insp, strcat(R__parent,"fS1VectorMcpPos."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fS1VectorMcpNeg", (void*)&fS1VectorMcpNeg);
      ::ROOT::GenericShowMembers("vector<TH1D>", (void*)&fS1VectorMcpNeg, R__insp, strcat(R__parent,"fS1VectorMcpNeg."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fS2VectorMcpPos", (void*)&fS2VectorMcpPos);
      ::ROOT::GenericShowMembers("vector<TH1D>", (void*)&fS2VectorMcpPos, R__insp, strcat(R__parent,"fS2VectorMcpPos."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fS2VectorMcpNeg", (void*)&fS2VectorMcpNeg);
      ::ROOT::GenericShowMembers("vector<TH1D>", (void*)&fS2VectorMcpNeg, R__insp, strcat(R__parent,"fS2VectorMcpNeg."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fS3VectorMcpPos", (void*)&fS3VectorMcpPos);
      ::ROOT::GenericShowMembers("vector<TH1D>", (void*)&fS3VectorMcpPos, R__insp, strcat(R__parent,"fS3VectorMcpPos."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fS3VectorMcpNeg", (void*)&fS3VectorMcpNeg);
      ::ROOT::GenericShowMembers("vector<TH1D>", (void*)&fS3VectorMcpNeg, R__insp, strcat(R__parent,"fS3VectorMcpNeg."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fS1YieldPos", &fS1YieldPos);
      R__insp.Inspect(R__cl, R__parent, "*fS1YieldNeg", &fS1YieldNeg);
      R__insp.Inspect(R__cl, R__parent, "*fS2YieldPos", &fS2YieldPos);
      R__insp.Inspect(R__cl, R__parent, "*fS2YieldNeg", &fS2YieldNeg);
      R__insp.Inspect(R__cl, R__parent, "*fS3YieldPos", &fS3YieldPos);
      R__insp.Inspect(R__cl, R__parent, "*fS3YieldNeg", &fS3YieldNeg);
      R__insp.Inspect(R__cl, R__parent, "*fS1MctPos", &fS1MctPos);
      R__insp.Inspect(R__cl, R__parent, "*fS1MctNeg", &fS1MctNeg);
      R__insp.Inspect(R__cl, R__parent, "*fS2MctPos", &fS2MctPos);
      R__insp.Inspect(R__cl, R__parent, "*fS2MctNeg", &fS2MctNeg);
      R__insp.Inspect(R__cl, R__parent, "*fS1McpPos", &fS1McpPos);
      R__insp.Inspect(R__cl, R__parent, "*fS1McpNeg", &fS1McpNeg);
      R__insp.Inspect(R__cl, R__parent, "*fS2McpPos", &fS2McpPos);
      R__insp.Inspect(R__cl, R__parent, "*fS2McpNeg", &fS2McpNeg);
      R__insp.Inspect(R__cl, R__parent, "*fS1TotalPos", &fS1TotalPos);
      R__insp.Inspect(R__cl, R__parent, "*fS1TotalNeg", &fS1TotalNeg);
      R__insp.Inspect(R__cl, R__parent, "*fS2TotalPos", &fS2TotalPos);
      R__insp.Inspect(R__cl, R__parent, "*fS2TotalNeg", &fS2TotalNeg);
      R__insp.Inspect(R__cl, R__parent, "*fPtTnpNeg", &fPtTnpNeg);
      R__insp.Inspect(R__cl, R__parent, "*fPtTnpPos", &fPtTnpPos);
      R__insp.Inspect(R__cl, R__parent, "*fPtMctNeg", &fPtMctNeg);
      R__insp.Inspect(R__cl, R__parent, "*fPtMctPos", &fPtMctPos);
      R__insp.Inspect(R__cl, R__parent, "*fPtMcpNeg", &fPtMcpNeg);
      R__insp.Inspect(R__cl, R__parent, "*fPtMcpPos", &fPtMcpPos);
      R__insp.Inspect(R__cl, R__parent, "*fPtMmbNeg", &fPtMmbNeg);
      R__insp.Inspect(R__cl, R__parent, "*fPtMmbPos", &fPtMmbPos);
      R__insp.Inspect(R__cl, R__parent, "*f0", &f0);
      R__insp.Inspect(R__cl, R__parent, "*f1", &f1);
      R__insp.Inspect(R__cl, R__parent, "*f2", &f2);
      R__insp.Inspect(R__cl, R__parent, "*f3", &f3);
      R__insp.Inspect(R__cl, R__parent, "*f4", &f4);
      R__insp.Inspect(R__cl, R__parent, "*f5", &f5);
      R__insp.Inspect(R__cl, R__parent, "*f6", &f6);
      R__insp.Inspect(R__cl, R__parent, "*f7", &f7);
      R__insp.Inspect(R__cl, R__parent, "*f8", &f8);
      R__insp.Inspect(R__cl, R__parent, "*f9", &f9);
      R__insp.Inspect(R__cl, R__parent, "fMode", &fMode);
      R__insp.Inspect(R__cl, R__parent, "fFont", &fFont);
      R__insp.Inspect(R__cl, R__parent, "*c0", &c0);
      R__insp.Inspect(R__cl, R__parent, "*c1", &c1);
      R__insp.Inspect(R__cl, R__parent, "*c2", &c2);
      R__insp.Inspect(R__cl, R__parent, "*c3", &c3);
      R__insp.Inspect(R__cl, R__parent, "*c4", &c4);
      R__insp.Inspect(R__cl, R__parent, "*c5", &c5);
      R__insp.Inspect(R__cl, R__parent, "*tl", &tl);
      R__insp.Inspect(R__cl, R__parent, "*box", &box);
      R__insp.Inspect(R__cl, R__parent, "*pa", &pa);
      R__insp.Inspect(R__cl, R__parent, "*pl", &pl);
      R__insp.Inspect(R__cl, R__parent, "*legg", &legg);
      R__insp.Inspect(R__cl, R__parent, "*legge", &legge);
      R__insp.Inspect(R__cl, R__parent, "line[200]", line);
      R__insp.Inspect(R__cl, R__parent, "fFixFit", &fFixFit);
      R__insp.Inspect(R__cl, R__parent, "fDirectory", (void*)&fDirectory);
      ::ROOT::GenericShowMembers("string", (void*)&fDirectory, R__insp, strcat(R__parent,"fDirectory."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPtDirectory", (void*)&fPtDirectory);
      ::ROOT::GenericShowMembers("string", (void*)&fPtDirectory, R__insp, strcat(R__parent,"fPtDirectory."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fNumbersFileName", (void*)&fNumbersFileName);
      ::ROOT::GenericShowMembers("string", (void*)&fNumbersFileName, R__insp, strcat(R__parent,"fNumbersFileName."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSample", (void*)&fSample);
      ::ROOT::GenericShowMembers("string", (void*)&fSample, R__insp, strcat(R__parent,"fSample."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSuffix[100]", fSuffix);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_anaTNP2(void *p) {
      return  p ? new(p) ::anaTNP2 : new ::anaTNP2;
   }
   static void *newArray_anaTNP2(Long_t nElements, void *p) {
      return p ? new(p) ::anaTNP2[nElements] : new ::anaTNP2[nElements];
   }
   // Wrapper around operator delete
   static void delete_anaTNP2(void *p) {
      delete ((::anaTNP2*)p);
   }
   static void deleteArray_anaTNP2(void *p) {
      delete [] ((::anaTNP2*)p);
   }
   static void destruct_anaTNP2(void *p) {
      typedef ::anaTNP2 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::anaTNP2

namespace ROOT {
   void vectorlETH1DgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlETH1DgR_Dictionary();
   static void *new_vectorlETH1DgR(void *p = 0);
   static void *newArray_vectorlETH1DgR(Long_t size, void *p);
   static void delete_vectorlETH1DgR(void *p);
   static void deleteArray_vectorlETH1DgR(void *p);
   static void destruct_vectorlETH1DgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TH1D>*)
   {
      vector<TH1D> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TH1D>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TH1D>", -2, "prec_stl/vector", 49,
                  typeid(vector<TH1D>), DefineBehavior(ptr, ptr),
                  0, &vectorlETH1DgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TH1D>) );
      instance.SetNew(&new_vectorlETH1DgR);
      instance.SetNewArray(&newArray_vectorlETH1DgR);
      instance.SetDelete(&delete_vectorlETH1DgR);
      instance.SetDeleteArray(&deleteArray_vectorlETH1DgR);
      instance.SetDestructor(&destruct_vectorlETH1DgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TH1D> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TH1D>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETH1DgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TH1D>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETH1DgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TH1D> : new vector<TH1D>;
   }
   static void *newArray_vectorlETH1DgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TH1D>[nElements] : new vector<TH1D>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETH1DgR(void *p) {
      delete ((vector<TH1D>*)p);
   }
   static void deleteArray_vectorlETH1DgR(void *p) {
      delete [] ((vector<TH1D>*)p);
   }
   static void destruct_vectorlETH1DgR(void *p) {
      typedef vector<TH1D> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TH1D>

/********************************************************
* tnp/anaTNP2Dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && (__GNUC__ > 3) && (__GNUC_MINOR__ > 1)
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableanaTNP2Dict();

extern "C" void G__set_cpp_environmentanaTNP2Dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("tnp/anaTNP2.hh");
  G__cpp_reset_tagtableanaTNP2Dict();
}
#include <new>
extern "C" int G__cpp_dllrevanaTNP2Dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* anaTNP2 */
static int G__anaTNP2Dict_321_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   anaTNP2* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new anaTNP2((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) anaTNP2((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new anaTNP2((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) anaTNP2((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new anaTNP2[n];
       } else {
         p = new((void*) gvp) anaTNP2[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new anaTNP2;
       } else {
         p = new((void*) gvp) anaTNP2;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaTNP2DictLN_anaTNP2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((anaTNP2*) G__getstructoffset())->init((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((anaTNP2*) G__getstructoffset())->init((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((anaTNP2*) G__getstructoffset())->loadFiles((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((anaTNP2*) G__getstructoffset())->loadFiles((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((anaTNP2*) G__getstructoffset())->combineUpsilons();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((anaTNP2*) G__getstructoffset())->makeAll((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((anaTNP2*) G__getstructoffset())->makeAll();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((anaTNP2*) G__getstructoffset())->readHistograms((TFile*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((anaTNP2*) G__getstructoffset())->readHistograms((TFile*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((anaTNP2*) G__getstructoffset())->readHistograms((TFile*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((anaTNP2*) G__getstructoffset())->readHistograms((TFile*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((anaTNP2*) G__getstructoffset())->readHistograms((TFile*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((anaTNP2*) G__getstructoffset())->readHistograms((TFile*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((anaTNP2*) G__getstructoffset())->readPidTables((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((anaTNP2*) G__getstructoffset())->readPidTables();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((anaTNP2*) G__getstructoffset())->addBackground(*(vector<TH1D>*) libp->para[0].ref, (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((anaTNP2*) G__getstructoffset())->addBackground(*(vector<TH1D>*) libp->para[0].ref, (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((anaTNP2*) G__getstructoffset())->addBackground(*(vector<TH1D>*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((anaTNP2*) G__getstructoffset())->addBackground(*(vector<TH1D>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((anaTNP2*) G__getstructoffset())->fitJpsi();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((anaTNP2*) G__getstructoffset())->fitUpsilon();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((anaTNP2*) G__getstructoffset())->McpYields();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((anaTNP2*) G__getstructoffset())->fillPidTables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((anaTNP2*) G__getstructoffset())->validation();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((anaTNP2*) G__getstructoffset())->projections();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((anaTNP2*) G__getstructoffset())->allDifferences((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((anaTNP2*) G__getstructoffset())->allDifferences();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((anaTNP2*) G__getstructoffset())->ptDifference((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((anaTNP2*) G__getstructoffset())->ptDifference((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((anaTNP2*) G__getstructoffset())->totalMass();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((anaTNP2*) G__getstructoffset())->biasPlots((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((anaTNP2*) G__getstructoffset())->biasPlots((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((anaTNP2*) G__getstructoffset())->biasPlots((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((anaTNP2*) G__getstructoffset())->biasPlots();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((anaTNP2*) G__getstructoffset())->setFunctionParameters((TH1D*) G__int(libp->para[0]), (TF1*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((anaTNP2*) G__getstructoffset())->getBinCenters(*((string*) G__int(libp->para[0])), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(int*) G__Intref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((anaTNP2*) G__getstructoffset())->wait());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((anaTNP2*) G__getstructoffset())->makeCanvas((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((anaTNP2*) G__getstructoffset())->makeCanvas();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) anaTNP2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) anaTNP2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) anaTNP2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      anaTNP2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((anaTNP2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) anaTNP2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) anaTNP2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) anaTNP2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaTNP2Dict_321_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) anaTNP2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaTNP2Dict_321_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   anaTNP2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new anaTNP2(*(anaTNP2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaTNP2DictLN_anaTNP2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef anaTNP2 G__TanaTNP2;
static int G__anaTNP2Dict_321_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (anaTNP2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((anaTNP2*) (soff+(sizeof(anaTNP2)*i)))->~G__TanaTNP2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (anaTNP2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((anaTNP2*) (soff))->~G__TanaTNP2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaTNP2Dict_321_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   anaTNP2* dest = (anaTNP2*) G__getstructoffset();
   *dest = *(anaTNP2*) libp->para[0].ref;
   const anaTNP2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* anaTNP2 */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncanaTNP2Dict {
 public:
  G__Sizep2memfuncanaTNP2Dict(): p(&G__Sizep2memfuncanaTNP2Dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncanaTNP2Dict::*p)();
};

size_t G__get_sizep2memfuncanaTNP2Dict()
{
  G__Sizep2memfuncanaTNP2Dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceanaTNP2Dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaTNP2DictLN_anaTNP2))) {
     anaTNP2 *G__Lderived;
     G__Lderived=(anaTNP2*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaTNP2DictLN_anaTNP2),G__get_linked_tagnum(&G__anaTNP2DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableanaTNP2Dict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anaTNP2DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anaTNP2DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__anaTNP2DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__anaTNP2DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__anaTNP2DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__anaTNP2DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__anaTNP2DictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__anaTNP2DictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__anaTNP2DictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__anaTNP2DictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH1D>",117,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anaTNP2DictLN_reverse_iteratorlEvectorlETH1DcOallocatorlETH1DgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anaTNP2DictLN_reverse_iteratorlEvectorlETH1DcOallocatorlETH1DgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* anaTNP2 */
static void G__setup_memvaranaTNP2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaTNP2DictLN_anaTNP2));
   { anaTNP2 *p; p=(anaTNP2*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fD)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TFile),-1,-1,1,"fD[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TFile),-1,-1,1,"fM[20]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fShow)-(long)(p)),105,0,0,-1,-1,-1,1,"fShow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TString),-1,-1,1,"fFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lD)-(long)(p)),100,0,0,-1,-1,-1,1,"lD[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lM)-(long)(p)),100,0,0,-1,-1,-1,1,"lM[20]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHbinning)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH2D),-1,-1,1,"fHbinning=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS1VectorPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR),G__defined_typename("vector<TH1D>"),-1,1,"fS1VectorPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS1VectorNeg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR),G__defined_typename("vector<TH1D>"),-1,1,"fS1VectorNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS2VectorPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR),G__defined_typename("vector<TH1D>"),-1,1,"fS2VectorPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS2VectorNeg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR),G__defined_typename("vector<TH1D>"),-1,1,"fS2VectorNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS3VectorPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR),G__defined_typename("vector<TH1D>"),-1,1,"fS3VectorPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS3VectorNeg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR),G__defined_typename("vector<TH1D>"),-1,1,"fS3VectorNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS1VectorMcpPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR),G__defined_typename("vector<TH1D>"),-1,1,"fS1VectorMcpPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS1VectorMcpNeg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR),G__defined_typename("vector<TH1D>"),-1,1,"fS1VectorMcpNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS2VectorMcpPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR),G__defined_typename("vector<TH1D>"),-1,1,"fS2VectorMcpPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS2VectorMcpNeg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR),G__defined_typename("vector<TH1D>"),-1,1,"fS2VectorMcpNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS3VectorMcpPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR),G__defined_typename("vector<TH1D>"),-1,1,"fS3VectorMcpPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS3VectorMcpNeg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR),G__defined_typename("vector<TH1D>"),-1,1,"fS3VectorMcpNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS1YieldPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH2D),-1,-1,1,"fS1YieldPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS1YieldNeg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH2D),-1,-1,1,"fS1YieldNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS2YieldPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH2D),-1,-1,1,"fS2YieldPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS2YieldNeg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH2D),-1,-1,1,"fS2YieldNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS3YieldPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH2D),-1,-1,1,"fS3YieldPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS3YieldNeg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH2D),-1,-1,1,"fS3YieldNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS1MctPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH2D),-1,-1,1,"fS1MctPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS1MctNeg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH2D),-1,-1,1,"fS1MctNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS2MctPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH2D),-1,-1,1,"fS2MctPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS2MctNeg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH2D),-1,-1,1,"fS2MctNeg=",0,"MC truth");
   G__memvar_setup((void*)((long)(&p->fS1McpPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH2D),-1,-1,1,"fS1McpPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS1McpNeg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH2D),-1,-1,1,"fS1McpNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS2McpPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH2D),-1,-1,1,"fS2McpPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS2McpNeg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH2D),-1,-1,1,"fS2McpNeg=",0,"MC probe");
   G__memvar_setup((void*)((long)(&p->fS1TotalPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH1D),-1,-1,1,"fS1TotalPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS1TotalNeg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH1D),-1,-1,1,"fS1TotalNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS2TotalPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH1D),-1,-1,1,"fS2TotalPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS2TotalNeg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TH1D),-1,-1,1,"fS2TotalNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPtTnpNeg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_PidTable),-1,-1,1,"fPtTnpNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPtTnpPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_PidTable),-1,-1,1,"fPtTnpPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPtMctNeg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_PidTable),-1,-1,1,"fPtMctNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPtMctPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_PidTable),-1,-1,1,"fPtMctPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPtMcpNeg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_PidTable),-1,-1,1,"fPtMcpNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPtMcpPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_PidTable),-1,-1,1,"fPtMcpPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPtMmbNeg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_PidTable),-1,-1,1,"fPtMmbNeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPtMmbPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_PidTable),-1,-1,1,"fPtMmbPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TF1),-1,-1,1,"f0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TF1),-1,-1,1,"f1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TF1),-1,-1,1,"f2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TF1),-1,-1,1,"f3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TF1),-1,-1,1,"f4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f5)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TF1),-1,-1,1,"f5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f6)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TF1),-1,-1,1,"f6=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f7)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TF1),-1,-1,1,"f7=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f8)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TF1),-1,-1,1,"f8=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f9)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TF1),-1,-1,1,"f9=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMode)-(long)(p)),105,0,0,-1,-1,-1,1,"fMode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFont)-(long)(p)),105,0,0,-1,-1,-1,1,"fFont=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TCanvas),-1,-1,1,"c0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TCanvas),-1,-1,1,"c1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TCanvas),-1,-1,1,"c2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TCanvas),-1,-1,1,"c3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TCanvas),-1,-1,1,"c4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c5)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TCanvas),-1,-1,1,"c5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TLatex),-1,-1,1,"tl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->box)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TBox),-1,-1,1,"box=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pa)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TArrow),-1,-1,1,"pa=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TLine),-1,-1,1,"pl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->legg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TLegend),-1,-1,1,"legg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->legge)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TLegendEntry),-1,-1,1,"legge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->line)-(long)(p)),99,0,0,-1,-1,-1,1,"line[200]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFixFit)-(long)(p)),105,0,0,-1,-1,-1,1,"fFixFit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDirectory)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_string),-1,-1,1,"fDirectory=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPtDirectory)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_string),-1,-1,1,"fPtDirectory=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNumbersFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_string),-1,-1,1,"fNumbersFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSample)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_string),-1,-1,1,"fSample=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSuffix)-(long)(p)),99,0,0,-1,-1,-1,1,"fSuffix[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaTNP2DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvaranaTNP2Dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncanaTNP2(void) {
   /* anaTNP2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaTNP2DictLN_anaTNP2));
   G__memfunc_setup("anaTNP2",596,G__anaTNP2Dict_321_0_1, 105, G__get_linked_tagnum(&G__anaTNP2DictLN_anaTNP2), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"/data/ursl/muonID-rootfiles\"' dir i - - 0 '1' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__anaTNP2Dict_321_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - dir i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("loadFiles",915,G__anaTNP2Dict_321_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - dir i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("combineUpsilons",1594,G__anaTNP2Dict_321_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeAll",695,G__anaTNP2Dict_321_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '3' channels", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readHistograms",1469,G__anaTNP2Dict_321_0_6, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'TFile' - 0 - f C - - 10 '\"mm\"' s1 "
"C - - 10 '\"mt\"' s2 C - - 10 '\"mmbar\"' s3 "
"C - - 10 '\"Matched\"' sm C - - 10 '\"mt,pt-eta\"' binning", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readPidTables",1300,G__anaTNP2Dict_321_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"jpsi\"' sample", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addBackground",1321,G__anaTNP2Dict_321_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<TH1D,allocator<TH1D> >' 'vector<TH1D>' 1 - vec d - - 0 '2.' s2b "
"d - - 0 '1.' p0 d - - 0 '0.' p1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitJpsi",729,G__anaTNP2Dict_321_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitUpsilon",1069,G__anaTNP2Dict_321_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("McpYields",906,G__anaTNP2Dict_321_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillPidTables",1311,G__anaTNP2Dict_321_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("validation",1067,G__anaTNP2Dict_321_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("projections",1200,G__anaTNP2Dict_321_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allDifferences",1431,G__anaTNP2Dict_321_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' jpsiOnly", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptDifference",1231,G__anaTNP2Dict_321_0_16, 121, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - a C - - 10 - b "
"d - - 0 - MIN d - - 0 - MAX "
"C - - 10 '\"ptDifference.pdf\"' fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("totalMass",952,G__anaTNP2Dict_321_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("biasPlots",945,G__anaTNP2Dict_321_0_18, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 '\"/data/ursl/muonID-rootfiles/biased/upsilon/ups_biasstudy.root\"' fname C - - 10 '\"upsilon-bias.png\"' psname "
"i - - 0 '15' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFunctionParameters",2214,G__anaTNP2Dict_321_0_19, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH1D' - 0 - h U 'TF1' - 0 - f "
"i - - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBinCenters",1325,G__anaTNP2Dict_321_0_20, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - hname d - - 1 - eta "
"d - - 1 - pT i - - 1 - Q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("wait",437,G__anaTNP2Dict_321_0_21, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeCanvas",1018,G__anaTNP2Dict_321_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '3' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaTNP2Dict_321_0_23, 85, G__get_linked_tagnum(&G__anaTNP2DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&anaTNP2::Class), 0);
   G__memfunc_setup("Class_Name",982,G__anaTNP2Dict_321_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&anaTNP2::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__anaTNP2Dict_321_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&anaTNP2::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__anaTNP2Dict_321_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&anaTNP2::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaTNP2DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaTNP2Dict_321_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaTNP2Dict_321_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&anaTNP2::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaTNP2Dict_321_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&anaTNP2::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaTNP2Dict_321_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&anaTNP2::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaTNP2Dict_321_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&anaTNP2::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("anaTNP2", 596, G__anaTNP2Dict_321_0_35, (int) ('i'), G__get_linked_tagnum(&G__anaTNP2DictLN_anaTNP2), -1, 0, 1, 1, 1, 0, "u 'anaTNP2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~anaTNP2", 722, G__anaTNP2Dict_321_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaTNP2Dict_321_0_37, (int) ('u'), G__get_linked_tagnum(&G__anaTNP2DictLN_anaTNP2), -1, 1, 1, 1, 1, 0, "u 'anaTNP2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncanaTNP2Dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalanaTNP2Dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcanaTNP2Dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__anaTNP2DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TLatex = { "TLatex" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TBox = { "TBox" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TLegendEntry = { "TLegendEntry" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TLegend = { "TLegend" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TLine = { "TLine" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TArrow = { "TArrow" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_PidTable = { "PidTable" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_anaTNP2 = { "anaTNP2" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR = { "vector<TH1D,allocator<TH1D> >" , 99 , -1 };
G__linked_taginfo G__anaTNP2DictLN_reverse_iteratorlEvectorlETH1DcOallocatorlETH1DgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH1D,allocator<TH1D> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableanaTNP2Dict() {
  G__anaTNP2DictLN_TClass.tagnum = -1 ;
  G__anaTNP2DictLN_TBuffer.tagnum = -1 ;
  G__anaTNP2DictLN_TMemberInspector.tagnum = -1 ;
  G__anaTNP2DictLN_TObject.tagnum = -1 ;
  G__anaTNP2DictLN_string.tagnum = -1 ;
  G__anaTNP2DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__anaTNP2DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anaTNP2DictLN_TString.tagnum = -1 ;
  G__anaTNP2DictLN_TLatex.tagnum = -1 ;
  G__anaTNP2DictLN_TBox.tagnum = -1 ;
  G__anaTNP2DictLN_TLegendEntry.tagnum = -1 ;
  G__anaTNP2DictLN_TLegend.tagnum = -1 ;
  G__anaTNP2DictLN_TLine.tagnum = -1 ;
  G__anaTNP2DictLN_TArrow.tagnum = -1 ;
  G__anaTNP2DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__anaTNP2DictLN_TFile.tagnum = -1 ;
  G__anaTNP2DictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__anaTNP2DictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__anaTNP2DictLN_TF1.tagnum = -1 ;
  G__anaTNP2DictLN_TH1D.tagnum = -1 ;
  G__anaTNP2DictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__anaTNP2DictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__anaTNP2DictLN_TH2D.tagnum = -1 ;
  G__anaTNP2DictLN_TCanvas.tagnum = -1 ;
  G__anaTNP2DictLN_PidTable.tagnum = -1 ;
  G__anaTNP2DictLN_anaTNP2.tagnum = -1 ;
  G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR.tagnum = -1 ;
  G__anaTNP2DictLN_reverse_iteratorlEvectorlETH1DcOallocatorlETH1DgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableanaTNP2Dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TClass);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TObject);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_string);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TString);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TLatex);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TBox);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TLegendEntry);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TLegend);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TLine);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TArrow);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TFile);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TF1);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TH2D);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_PidTable);
   G__tagtable_setup(G__get_linked_tagnum(&G__anaTNP2DictLN_anaTNP2),sizeof(anaTNP2),-1,28928,"Testing anaTNP2",G__setup_memvaranaTNP2,G__setup_memfuncanaTNP2);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_vectorlETH1DcOallocatorlETH1DgRsPgR);
   G__get_linked_tagnum_fwd(&G__anaTNP2DictLN_reverse_iteratorlEvectorlETH1DcOallocatorlETH1DgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupanaTNP2Dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupanaTNP2Dict()");
  G__set_cpp_environmentanaTNP2Dict();
  G__cpp_setup_tagtableanaTNP2Dict();

  G__cpp_setup_inheritanceanaTNP2Dict();

  G__cpp_setup_typetableanaTNP2Dict();

  G__cpp_setup_memvaranaTNP2Dict();

  G__cpp_setup_memfuncanaTNP2Dict();
  G__cpp_setup_globalanaTNP2Dict();
  G__cpp_setup_funcanaTNP2Dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncanaTNP2Dict();
  return;
}
class G__cpp_setup_initanaTNP2Dict {
  public:
    G__cpp_setup_initanaTNP2Dict() { G__add_setup_func("anaTNP2Dict",(G__incsetup)(&G__cpp_setupanaTNP2Dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initanaTNP2Dict() { G__remove_setup_func("anaTNP2Dict"); }
};
G__cpp_setup_initanaTNP2Dict G__cpp_setup_initializeranaTNP2Dict;

